alias physicalSP S0;
alias fileDescriptor S1;
alias i S3;
alias j S4;
alias k S5;
alias l S8;

physicalSP = ([PTBR + 2 * (SP / 512)] * 512) + (SP % 512);
fileDescriptor = [physicalSP - 4];

if ([physicalSP - 1] == 6) then
	alias newlSeek S2;
	alias cPID S6;
	alias cPCB S7;
	cPID = (PTBR - 1024) / 8;
	cPCB = READY_LIST + 32 * cPID;
	newlSeek = [physicalSP - 3];

	
	//	Check if fileDescriptor is Valid
	if (fileDescriptor < 0 || fileDescriptor > 7) then
		[physicalSP - 2] = -1;
		ireturn;
	endif;


	//	Check if Process Open File Table Entry is Valid
	i = cPCB + 15 + 2 * fileDescriptor;
	j = [i];
	if (j == -1) then
		[physicalSP - 2] = -1;
		ireturn;
	endif;
	k = [FAT + j * 8 + 1];
	if (newlSeek < 0 || newlSeek > k) then
		[physicalSP - 2] = -1;
		ireturn;
	endif;
	[i + 1] = newlSeek;
	[physicalSP - 2] = 0;
	ireturn;
endif;